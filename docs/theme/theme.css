.light {
  --text: 69, 38, 1;
  --subtext1: 92, 51, 3;
  --subtext0: 125, 70, 6;
  --overlay2: 148, 84, 10;
  --overlay1: 173, 102, 19;
  --overlay0: 230, 156, 69;
  --surface2: 156, 160, 176;
  --surface1: 245, 209, 169;
  --surface0: 250, 232, 212;
  --base: 255, 248, 240;
  --mantle: 255, 255, 255;

  --pink: 234, 118, 203;
  --mauve: 136, 57, 239;
  --red: 210, 15, 57;
  --maroon: 221, 120, 120;
  --peach: 254, 100, 11;
  --yellow: 223, 142, 29;
  --green: 64, 160, 43;
  --teal: 23, 146, 153;
  --sky: 4, 165, 229;
  --sapphire: 32, 159, 181;
  --blue: 30, 102, 245;
  /* Corresponds roughly to overlay0 #7c7f93 */
  --copy-button-filter: brightness(0) saturate(100%) invert(47%) sepia(6%)
    saturate(1263%) hue-rotate(195deg) brightness(90%) contrast(81%);
  /* Corresponds roughly to blue #1e66f5 */
  --copy-button-filter-hover: brightness(0) saturate(100%) invert(30%)
    sepia(80%) saturate(1850%) hue-rotate(209deg) brightness(94%) contrast(105%);
  --color-scheme: light;
}

:root {
  --bg: rgb(var(--base));
  --fg: rgb(var(--text));
  --sidebar-bg: rgb(var(--surface0));
  --sidebar-fg: rgb(var(--text));
  --sidebar-non-existant: rgb(var(--surface2));
  --sidebar-active: rgb(var(--subtext1));
  --sidebar-spacer: rgb(var(--surface2));
  --scrollbar: rgb(var(--surface2));
  --icons: rgb(var(--text));
  --icons-hover: rgb(var(--overlay0));
  --links: rgb(var(--text));
  --inline-code-color: rgb(var(--text));
  --theme-popup-bg: rgb(var(--surface0));
  --theme-popup-border: rgb(var(--surface2));
  --theme-hover: rgb(var(--surface1));
  --quote-bg: rgb(var(--surface0));
  --quote-border: rgb(var(--mantle));
  --table-border-color: rgb(var(--surface1));
  --table-header-bg: rgb(var(--surface0));
  --table-alternate-bg: rgb(var(--surface0));
  --searchbar-border-color: rgb(var(--surface1));
  --searchbar-bg: rgb(var(--surface0));
  --searchbar-fg: rgb(var(--text));
  --searchbar-shadow-color: rgb(var(--mantle));
  --searchresults-header-fg: rgb(var(--text));
  --searchresults-border-color: rgb(var(--surface1));
  --searchresults-li-bg: rgb(var(--base));
  --search-mark-bg: rgb(var(--peach));
  --warning-border: rgb(var(--peach));

  /* HighlightJS Styles */
  color: rgb(var(--text));
  background: rgb(var(--base));
}

.light a {
  text-decoration: underline;
}

.light.hljs {
  color: rgb(var(--text));
  background: rgb(var(--base));
}

.light .hljs-keyword {
  color: rgb(var(--mauve));
}
.light .hljs-built_in {
  color: rgb(var(--red));
}
.light .hljs-type {
  color: rgb(var(--yellow));
}
.light .hljs-literal {
  color: rgb(var(--peach));
}
.light .hljs-number {
  color: rgb(var(--peach));
}
.light .hljs-operator {
  color: rgb(var(--sky));
}
.light .hljs-punctuation {
  color: rgb(var(--subtext0));
}
.light .hljs-property {
  color: rgb(var(--teal));
}
.light .hljs-regexp {
  color: rgb(var(--pink));
}
.light .hljs-string {
  color: rgb(var(--green));
}
.light .hljs-char.escape_ {
  color: rgb(var(--green));
}
.light .hljs-subst {
  color: rgb(var(--subtext1));
}
.light .hljs-symbol {
  color: rgb(var(--maroon));
}
.light .hljs-variable {
  color: rgb(var(--mauve));
}
.light .hljs-variable.language_ {
  color: rgb(var(--mauve));
}
.light .hljs-variable.constant_ {
  color: rgb(var(--peach));
}
.light .hljs-title {
  color: rgb(var(--blue));
}
.light .hljs-title.class_ {
  color: rgb(var(--yellow));
}
.light .hljs-title.function_ {
  color: rgb(var(--blue));
}
.light .hljs-params {
  color: rgb(var(--text));
}
.light .hljs-comment {
  color: rgb(var(--overlay0));
}
.light .hljs-doctag {
  color: rgb(var(--red));
}
.light .hljs-meta {
  color: rgb(var(--peach));
}
.light .hljs-section {
  color: rgb(var(--blue));
}
.light .hljs-tag {
  color: rgb(var(--teal));
}
.light .hljs-name {
  color: rgb(var(--mauve));
}
.light .hljs-attr {
  color: rgb(var(--blue));
}
.light .hljs-attribute {
  color: rgb(var(--green));
}
.light .hljs-bullet {
  color: rgb(var(--teal));
}
.light .hljs-code {
  color: rgb(var(--green));
}
.light .hljs-emphasis {
  color: rgb(var(--red));
  font-style: italic;
}
.light .hljs-strong {
  color: rgb(var(--red));
  font-weight: bold;
}
.light .hljs-formula {
  color: rgb(var(--teal));
}
.light .hljs-link {
  color: rgb(var(--sapphire));
  font-style: italic;
}
.light .hljs-quote {
  color: rgb(var(--green));
  font-style: italic;
}
.light .hljs-selector-tag {
  color: rgb(var(--yellow));
}
.light .hljs-selector-id {
  color: rgb(var(--blue));
}
.light .hljs-selector-class {
  color: rgb(var(--teal));
}
.light .hljs-selector-attr {
  color: rgb(var(--mauve));
}
.light .hljs-selector-pseudo {
  color: rgb(var(--teal));
}
.light .hljs-template-tag {
  color: rgb(var(--maroon));
}
.light .hljs-template-variable {
  color: rgb(var(--maroon));
}
.light .hljs-addition {
  color: rgb(var(--green));
  background: rgba(var(--green), 0.15);
}
.light .hljs-deletion {
  color: rgb(var(--red));
  background: rgba(var(--red), 0.15);
}

/* General Markdown and UI Styles */
.light :is(h1, h2, h3, h4, h5, h6) a code {
  color: rgb(var(--text));
}
.light a code {
  color: rgb(var(--blue));
}
.light code {
  color: rgb(var(--text));
  background: rgb(var(--surface0));
}
.light blockquote blockquote {
  border-top: 0.1em solid rgb(var(--overlay1));
  border-bottom: 0.1em solid rgb(var(--overlay1));
}
.light hr {
  border-color: rgb(var(--overlay1));
  border-style: solid;
}
.light del {
  color: rgb(var(--overlay0));
}
.light .ace_gutter {
  color: rgb(var(--overlay2));
  background: rgb(var(--surface0));
}
.light .ace_gutter-active-line.ace_gutter-cell {
  color: rgb(var(--pink));
  background: rgb(var(--surface0));
}
.light .tooltiptext {
  background: rgb(var(--surface0));
  color: rgb(var(--text));
}

/* mdbook-alerts */
.light .mdbook-alerts-note {
  --mdbook-alerts-color: rgb(var(--blue));
}
.light .mdbook-alerts-tip {
  --mdbook-alerts-color: rgb(var(--green));
}
.light .mdbook-alerts-important {
  --mdbook-alerts-color: rgb(var(--mauve));
}
.light .mdbook-alerts-warning {
  --mdbook-alerts-color: rgb(var(--yellow));
}
.light .mdbook-alerts-caution {
  --mdbook-alerts-color: rgb(var(--red));
}

/* Admonitions */
.light :is(.admonition):is(.admonish-hint, .admonish-important, .admonish-tip) {
  border-color: rgb(var(--yellow));
}
.light
  :is(.admonish-hint, .admonish-important, .admonish-tip)
  > :is(.admonition-title, summary.admonition-title) {
  background-color: rgba(var(--yellow), 0.2);
}
.light
  :is(.admonish-hint, .admonish-important, .admonish-tip)
  > :is(.admonition-title, summary.admonition-title)::before {
  background-color: rgb(var(--yellow));
}
.light
  :is(.admonition):is(.admonish-abstract, .admonish-summary, .admonish-tldr) {
  border-color: rgb(var(--maroon));
}
.light
  :is(.admonish-abstract, .admonish-summary, .admonish-tldr)
  > :is(.admonition-title, summary.admonition-title) {
  background-color: rgba(var(--maroon), 0.2);
}
.light
  :is(.admonish-abstract, .admonish-summary, .admonish-tldr)
  > :is(.admonition-title, summary.admonition-title)::before {
  background-color: rgb(var(--maroon));
}
.light :is(.admonition):is(.admonish-example) {
  border-color: rgb(var(--mauve));
}
.light
  :is(.admonish-example)
  > :is(.admonition-title, summary.admonition-title) {
  background-color: rgba(var(--mauve), 0.2);
}
.light
  :is(.admonish-example)
  > :is(.admonition-title, summary.admonition-title)::before {
  background-color: rgb(var(--mauve));
}
.light :is(.admonition):is(.admonish-info, .admonish-todo) {
  border-color: rgb(var(--sky));
}
.light
  :is(.admonish-info, .admonish-todo)
  > :is(.admonition-title, summary.admonition-title) {
  background-color: rgba(var(--sky), 0.2);
}
.light
  :is(.admonish-info, .admonish-todo)
  > :is(.admonition-title, summary.admonition-title)::before {
  background-color: rgb(var(--sky));
}
.light :is(.admonition):is(.admonish-check, .admonish-done, .admonish-success) {
  border-color: rgb(var(--green));
}
.light
  :is(.admonish-check, .admonish-done, .admonish-success)
  > :is(.admonition-title, summary.admonition-title) {
  background-color: rgba(var(--green), 0.2);
}
.light
  :is(.admonish-check, .admonish-done, .admonish-success)
  > :is(.admonition-title, summary.admonition-title)::before {
  background-color: rgb(var(--green));
}
.light :is(.admonition):is(.admonish-note) {
  border-color: rgb(var(--blue));
}
.light :is(.admonish-note) > :is(.admonition-title, summary.admonition-title) {
  background-color: rgba(var(--blue), 0.2);
}
.light
  :is(.admonish-note)
  > :is(.admonition-title, summary.admonition-title)::before {
  background-color: rgb(var(--blue));
}
.light
  :is(.admonition):is(
    .admonish-attention,
    .admonish-caution,
    .admonish-warning
  ) {
  border-color: rgb(var(--peach));
}
.light
  :is(.admonish-attention, .admonish-caution, .admonish-warning)
  > :is(.admonition-title, summary.admonition-title) {
  background-color: rgba(var(--peach), 0.2);
}
.light
  :is(.admonish-attention, .admonish-caution, .admonish-warning)
  > :is(.admonition-title, summary.admonition-title)::before {
  background-color: rgb(var(--peach));
}
.light :is(.admonition):is(.admonish-faq, .admonish-help, .admonish-question) {
  border-color: rgb(var(--teal));
}
.light
  :is(.admonish-faq, .admonish-help, .admonish-question)
  > :is(.admonition-title, summary.admonition-title) {
  background-color: rgba(var(--teal), 0.2);
}
.light
  :is(.admonish-faq, .admonish-help, .admonish-question)
  > :is(.admonition-title, summary.admonition-title)::before {
  background-color: rgb(var(--teal));
}
.light
  :is(.admonition):is(
    .admonish-bug,
    .admonish-danger,
    .admonish-error,
    .admonish-fail,
    .admonish-failure,
    .admonish-missing
  ) {
  border-color: rgb(var(--red));
}
.light
  :is(
    .admonish-bug,
    .admonish-danger,
    .admonish-error,
    .admonish-fail,
    .admonish-failure,
    .admonish-missing
  )
  > :is(.admonition-title, summary.admonition-title) {
  background-color: rgba(var(--red), 0.2);
}
.light
  :is(
    .admonish-bug,
    .admonish-danger,
    .admonish-error,
    .admonish-fail,
    .admonish-failure,
    .admonish-missing
  )
  > :is(.admonition-title, summary.admonition-title)::before {
  background-color: rgb(var(--red));
}
.light :is(.admonition):is(.admonish-cite, .admonish-quote) {
  border-color: rgb(var(--pink));
}
.light
  :is(.admonish-cite, .admonish-quote)
  > :is(.admonition-title, summary.admonition-title) {
  background-color: rgba(var(--pink), 0.2);
}
.light
  :is(.admonish-cite, .admonish-quote)
  > :is(.admonition-title, summary.admonition-title)::before {
  background-color: rgb(var(--pink));
}
